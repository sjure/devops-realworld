# Sheeps. Worker nodes for a Web Dev cluster
#
# Usage:
#    ansible-playbook --ask-vault DevOps-xxx.yaml
#
---
- name: Cloning MVs. Sheeps for DevOps cluster
  hosts: localhost
  gather_facts: false

# Variables
# --

# encrypted file with ansible-vault with the variable
# {{ ovirt_password }} storing the IaaS ULL password

  vars_files:
    - sjurvault.yaml

# SSH key for the user "ansible" 

  vars:
    ssh_keys: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCmImJEnXo8sTzzSgRtyyK66sAOM/3Mw/8zRcU2fiNAaL/yGy5jv0PMj/IdLDHUzU8QFMcCCQkE4KW2Y1mvlzLFVA9PiWnbebrI+Utlgvg85lamYuKptDUadq9AyoKvB/4kA++Guyoj4IA3KyHlXJ7OmIunO/rTjvY9M1gYpgxbcB+XcJgCuObnmE+qJpHl0/xOLhGwLmMWUutbuY24JGTP4pN2igHA1v9yvb6pyYGe6BnOBnRi9P4Ng+t9KoJyWOcRA/CbhkrkioUCdmdEVE2u7Ni+cT2wiaXI/7ksrrN4gvKt1pptdNT7UDEHBatqMxwVGP4lb3byenMr7rD0WU6V0UiNgXBZORF1VW0fJBEOhmNhwmvsShW9v7o2cD30g6MRRSghHNbk/rD2RKuV8OB2EIobXzQvUtJnOxjxKS4yZYOOeLxWZYoc0px3qtWnf5QPjlwqx27lgJfNeG74iFh7IEJjDxT9zk00/lKmuquDkN2tN0ZI6oHAxYSyZiQIKVc= sjur@Sjurs-PC

# IaaS user (change vblanco by aluxxx...)

    ovirt_login: alu0101456676@ULL

# Node names to create  (in these case, two "sheeps")

    prefix: DevOps
    nodes:
      - name: worker1
        ip: 192.168.40.10
        ip2: 192.168.41.10
      - name: worker2
        ip: 192.168.40.11
        ip2: 192.168.41.11

# Private network profile assigned to each Lab group
# See IaaS ULL portal

    node_nics: 
      - name: nic1
        profile_name: DOC1
      - name: nic2
        profile_name: DOCP2P-4014
      - name: nic3
        profile_name: DOCP2P-4004


# Tasks
# ------

  tasks:
    - name: Login to IaaS
      ovirt_auth:
        url: https://iaas.ull.es/ovirt-engine/api
        insecure: yes
        username: "{{ ovirt_login }}"
        password: "{{ ovirt_password }}"
        headers:
          filter: true

    - name: Create a VM
      ovirt_vm:
        auth: "{{ ovirt_auth }}"
        cluster: Cluster-Rojo
        name: "{{ prefix }}-{{ item.name }}"
        cpu_cores: 1
        cpu_sockets: 1
        memory: 1GiB
        template: debian-10-sinred-cloudinit
        nics: "{{ node_nics }}"
        state: present
        wait: yes
      with_items: "{{ nodes }}"
    
    - name: Update VM via cloud-init
      ovirt_vm:
        auth: "{{ ovirt_auth }}"
        name: "{{ prefix }}-{{ item.name }}"
        state: running
        cloud_init_nics:
          - nic_name: ens3
            nic_boot_protocol: dhcp
            nic_on_boot: yes
            nic_on_boot: True
          - nic_name: ens4
            nic_boot_protocol: static
            nic_ip_address: "{{ item.ip }}"
            nic_netmask: 255.255.255.0
            nic_gateway: 192.168.40.1
            nic_on_boot: yes
            nic_on_boot: True
          - nic_name: ens7
            nic_boot_protocol: static
            nic_ip_address: "{{ item.ip2 }}"
            nic_netmask: 255.255.255.0
            nic_gateway: 192.168.41.1
            nic_on_boot: yes
            nic_on_boot: True
        cloud_init:
          host_name: "{{ item.name }}"
          user_name: sjur

# Passwd generated with mkpasswd -m SHA-512 alumno2020
# Clear text password is: asdflkjasdf543 
          root_password: $6$BdTAR1aX$MLc4s6r5ymrwoTXiUjT0ABHPiaLpI0nSm4T9i662s31tA1SdUYJ7bwGjlWAJ/fIiWfQmEE/FWszYBKR/aSn8j1 
          authorized_ssh_keys: "{{ ssh_keys }}"
          custom_script: |
            write_files:
              - path: /etc/sudoers.d/sjur
                permissions: '0644'
                content: |
                  sjur ALL=(ALL) NOPASSWD:ALL
              - path: /tmp/saludos.txt
                permissions: '0644'
                content: |
                  "Que pasa, Oveja"
            runcmd:
              - sed -i '/AllowUsers/c\AllowUsers adminstic usuario soporteiass sjur' /etc/ssh/sshd_config
              - systemctl restart sshd
              - apt update -y
              - apt install apt-transport-https ca-certificates curl gnupg lsb-release -y
              - curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
              - echo "deb [arch=arm64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
              - apt update -y
              - apt install docker-ce docker-ce-cli containerd.io -y
              - apt update -y
              - apt install docker-compose -y
              - docker run -d -p 8080:8080 sjure/realworld_node
              - docker run -d -p 80:80 sjure/realworld_react

        wait: yes
      with_items: "{{ nodes }}"

    - name: Cleanup IaaS auth token
      ovirt_auth:
        ovirt_auth: "{{ ovirt_auth }}"
        state: absent



